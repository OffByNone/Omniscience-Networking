{"version":3,"sources":["../lib/HttpRequestParser.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;AACb,IAAM,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;IAEnC,iBAAiB;AACX,UADN,iBAAiB,CACV,eAAe,EAAE;wBADxB,iBAAiB;;AAErB,MAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;EACxC;;cAHI,iBAAiB;;SAIR,wBAAC,MAAM,EAAE;AACtB,OAAI,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC;;AAEzB,OAAI,YAAY,GAAG,EAAE,CAAC;AACtB,SAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAK;oCACpB,kBAAkB,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;;;;QAArD,GAAG;QAAE,KAAK;;AACf,gBAAY,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC1B,CAAC,CAAC;;AAEH,UAAO,YAAY,CAAC;GACpB;;;SACmB,8BAAC,IAAI,EAAE;AAC1B,OAAI,CAAC,IAAI,EACR,OAAO,IAAI,CAAC;;AAEb,OAAI,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnD,UAAO,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAmB,GAAG,SAAS,CAAC,mBAAmB,CAAC,CAAC;GACpF;;;SACY,uBAAC,QAAQ,EAAE;AACvB,OAAI,CAAC,QAAQ,EACZ,OAAO,IAAI,CAAC;;yBAEuB,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,mBAAmB,CAAC;;;;OAA5E,WAAW;;OAAK,WAAW;;4BACF,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAAC;;;;OAA1E,MAAM;OAAE,GAAG;OAAE,QAAQ;;AAE1B,OAAI,QAAQ,KAAK,SAAS,CAAC,WAAW,EACrC,OAAO,IAAI,CAAC;;oBAEQ,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;;;;OAA9B,IAAI;OAAE,MAAM;;AACjB,OAAI,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAE7C,OAAI,OAAO,GAAG,EAAE,CAAC;AACjB,cAAW,CAAC,OAAO,CAAC,UAAC,UAAU,EAAK;4BACf,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC;;;;QAApC,IAAI;QAAE,KAAK;;AAChB,QAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAClB,OAAO;AACR,WAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;IAChE,CAAC,CAAC;;AAEH,UAAO,EAAE,OAAO,EAAP,OAAO,EAAE,MAAM,EAAN,MAAM,EAAE,UAAU,EAAV,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;GACjE;;;QA5CI,iBAAiB;;;AA+CvB,MAAM,CAAC,OAAO,GAAG,iBAAiB,CAAC","file":"HttpRequestParser.js","sourcesContent":["\"use strict\";\r\nconst Constants = require('./Constants');\r\n\r\nclass HttpRequestParser {\r\n\tconstructor(networkingUtils) {\r\n\t\tthis._networkingUtils = networkingUtils;\r\n\t}\r\n\tparseUrlParams(params) {\r\n\t\tif (!params) return null;\r\n\r\n\t\tlet parsedParams = {};\r\n\t\tparams.split('&').forEach((keyValue) => {\r\n\t\t\tlet [key, value] = decodeURIComponent(keyValue).split('=');\r\n\t\t\tparsedParams[key] = value;\r\n\t\t});\r\n\r\n\t\treturn parsedParams;\r\n\t}\r\n\tseparateBodyFromHead(data) {\r\n\t\tif (!data)\r\n\t\t\treturn null;\r\n\r\n\t\tlet dataStr = this._networkingUtils.toString(data);\r\n\t\treturn dataStr.split(Constants.headerLineDelimiter + Constants.headerLineDelimiter);\r\n\t}\r\n\tparseMetadata(metadata) {\r\n\t\tif (!metadata)\r\n\t\t\treturn null;\r\n\r\n\t\tlet [requestLine, ...headerLines] = metadata.split(Constants.headerLineDelimiter);\r\n\t\tlet [method, uri, protocol] = requestLine.split(Constants.requestLineDelimiter);\r\n\r\n\t\tif (protocol !== Constants.httpVersion)\r\n\t\t\treturn null;\r\n\r\n\t\tlet [path, params] = uri.split('?');\r\n\t\tlet parameters = this.parseUrlParams(params);\r\n\r\n\t\tlet headers = {};\r\n\t\theaderLines.forEach((headerLine) => {\r\n\t\t\tlet [name, value] = headerLine.split(':');\r\n\t\t\tif (!name || !value)\r\n\t\t\t\treturn;\r\n\t\t\theaders[name.toLowerCase().trim()] = value.toLowerCase().trim();\r\n\t\t});\r\n\r\n\t\treturn { headers, method, parameters, path: path.toLowerCase() };\r\n\t}\r\n}\r\n\r\nmodule.exports = HttpRequestParser;"]}