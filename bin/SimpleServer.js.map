{"version":3,"sources":["../lib/SimpleServer.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AACb,IAAM,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;IAEnC,YAAY;AACH,UADT,YAAY,CACF,UAAU,EAAE,WAAW,EAAE,GAAG,EAAE;wBADxC,YAAY;;AAEV,MAAI,CAAC,WAAW,GAAG,UAAU,CAAC;AAC9B,MAAI,CAAC,YAAY,GAAG,WAAW,CAAC;AAChC,MAAI,CAAC,IAAI,GAAG,GAAG,CAAC;AACtB,MAAI,CAAC,IAAI,GAAG,IAAI,CAAC;EACd;;cANC,YAAY;;SAOZ,iBAAG;AACP,OAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;AACrC,UAAO,IAAI,CAAC,IAAI,CAAC;GACjB;;;SACG,gBAAG;AACN,OAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AACxB,UAAO,IAAI,CAAC,IAAI,CAAC;AACjB,OAAI,CAAC,WAAW,CAAC,eAAe,GAAG,EAAE,CAAC;AACtC,OAAI,CAAC,WAAW,CAAC,eAAe,GAAG,EAAE,CAAC;GACtC;;;SACW,sBAAC,IAAI,EAAE,QAAQ,EAAE;AAC5B,OAAI,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACxC,OAAI,QAAQ,SAAO,YAAY,SAAI,IAAI,CAAC,IAAI,AAAE,CAAC;AAC/C,OAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;;AAE3C,OAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EACjE,OAAO,IAAI,CAAC,IAAI,CAAC;;AAElB,OAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;AACvD,sBAAiB,QAAQ,SAAI,IAAI,CAAC,WAAW,CAAC,IAAI,QAAG,QAAQ,CAAG;GAChE;;;SACW,sBAAC,UAAU,EAAE,QAAQ,EAAE;AAClC,aAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;AACtC,OAAI,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,KACjE,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;GACzD;;;QAhCI,YAAY;;;AAkClB,MAAM,CAAC,OAAO,GAAG,YAAY,CAAC","file":"SimpleServer.js","sourcesContent":["\"use strict\";\r\nconst Constants = require('./Constants');\r\n\r\nclass SimpleServer {\r\n    constructor(httpServer, urlProvider, md5) {\r\n        this._httpServer = httpServer;\r\n        this._urlProvider = urlProvider;\r\n        this._md5 = md5;\r\n\t\tthis.port = null;\r\n    }\r\n\tstart() {\r\n\t\tthis.port = this._httpServer.start();\r\n\t\treturn this.port;\r\n\t}\r\n\tstop() {\r\n\t\tthis._httpServer.stop();\r\n\t\tdelete this.port;\r\n\t\tthis._httpServer.registeredFiles = {};\r\n\t\tthis._httpServer.registeredPaths = {};\r\n\t}\r\n\tregisterFile(file, serverIP) {\r\n\t\tlet filePathHash = this._md5(file.path);\r\n\t\tlet filePath = `/${filePathHash}/${file.name}`;\r\n\t\tlet pathname = encodeURI(filePath).toLowerCase();\r\n\r\n        if (!file.isLocal && this._urlProvider.isValidUri(file.path))\r\n\t\t\treturn file.path;\r\n\r\n\t\tthis._httpServer.registeredFiles[pathname] = file.path;\r\n\t\treturn `http://${serverIP}:${this._httpServer.port}${pathname}`;\r\n\t}\r\n\tregisterPath(serverPath, callback) {\r\n\t\tserverPath = serverPath.toLowerCase();\r\n\t\tif (callback) this._httpServer.registeredPaths[serverPath] = callback;\r\n\t\telse delete this._httpServer.registeredPaths[serverPath];\r\n\t}\r\n}\r\nmodule.exports = SimpleServer;"]}