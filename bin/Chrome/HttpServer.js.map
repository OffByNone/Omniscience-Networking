{"version":3,"sources":["../../lib/Chrome/HttpServer.js"],"names":[],"mappings":"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","file":"HttpServer.js","sourcesContent":["\"use strict\";\r\nconst Constants = require('../Constants');\r\nconst HttpRequest = require('../HttpRequest');\r\n\r\nclass HttpServer {\r\n\tconstructor(urlProvider, httpResponder, httpRequestHandler, timer, fileResponder, chromeTCPServer, chromeTCP) {\r\n\t\tthis._chromeTCPServer = chromeTCPServer;\r\n\t\tthis._chromeTCP = chromeTCP;\r\n\t\tthis._urlProvider = urlProvider;\r\n\t\tthis._httpResponder = httpResponder;\r\n\t\tthis._timer = timer;\r\n\t\tthis._fileResponder = fileResponder;\r\n\t\tthis._httpRequestHandler = httpRequestHandler;\r\n\r\n\t\tthis.isRunning = false;\r\n\t\tthis.port = null;\r\n\t\tthis.localAddress = \"0.0.0.0\";\r\n\t\tthis.registeredPaths = {};\r\n\t\tthis.registeredFiles = {};\r\n\t\tthis.incomingConnections = {};\r\n\t}\r\n\r\n\tstart() {\r\n\t\tif (this.isRunning) return;\r\n\r\n\t\tthis.isRunning = true;\r\n\t\tif (!this.port) this.port = this._getRandomPort();\r\n\r\n\t\tthis._chromeTCP.onReceive.addListener(({ socketId, data }) => {\r\n\t\t\tif (!this.incomingConnections.hasOwnProperty(socketId)) return; //connection is not to this server\r\n\r\n\t\t\tlet httpRequest = this.incomingConnections[socketId];\r\n\t\t\tthis._httpRequestHandler.handleRequest(socketId, data, httpRequest,\r\n\t\t\t\t(request) => this._onRequestSuccess(request),\r\n\t\t\t\t(request, error) => this._onRequestError(request, error));\r\n\t\t});\r\n\r\n\t\tthis._chromeTCPServer.onAccept.addListener(({socketId, clientSocketId}) => {\r\n\t\t\tif (this._socketId !== socketId) return; //connection is not to this server\r\n\r\n\t\t\tthis.incomingConnections[clientSocketId] = new HttpRequest();\r\n\t\t\tthis._chromeTCP.setPaused(clientSocketId, false);\r\n\t\t});\r\n\r\n\t\tthis._chromeTCPServer.onAcceptError.addListener(({socketId, resultCode}) => {\r\n\t\t\tconsole.log(\"error on socket \" + socketId + \" code: \" + resultCode);\r\n\t\t\tthis._chromeTCPServer.setPaused(socketId, false);\r\n\t\t});\r\n\r\n\t\t//todo: should this be persistent?\r\n\t\tthis._chromeTCPServer.create({ persistent: false, name: \"httpServerSocket\" }, ({socketId}) => {\r\n\t\t\tthis._socketId = socketId;\r\n\r\n\t\t\tthis._chromeTCPServer.listen(this._socketId, this.localAddress, this.port, null, (resultCode) => {\r\n\t\t\t\tif (resultCode < 0) {\r\n\t\t\t\t\tconsole.log(resultCode);\r\n\t\t\t\t\tthis.isRunning = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn this.port;\r\n\t}\r\n\tstop() {\r\n\t\tif (!this.isRunning) return;\r\n\t\tthis._chromeTCPServer.close(this._socketId, () => this.isRunning = false);\r\n\t}\r\n\t_getRandomPort() {\r\n\t\treturn Math.floor(Math.random() * (65535 - 10000)) + 10000;\r\n\t}\r\n\t_onRequestSuccess(request) {\r\n\t\t//todo: look into whether or not the below is actually a good idea\r\n\t\t//todo: the firefox server clears the timeout when the socket closes, as it has\r\n\t\t//an onclose event.  As far as I can tell chrome's doesn't.  See if we can detect onclose this\r\n\t\t//if the socket is already closed chrome throws two errors:\r\n\t\t//\tUnchecked runtime.lastError while running sockets.tcp.getInfo: Socket not found\r\n\t\t//\tand\r\n\t\t//\tError in response to sockets.tcp.getInfo: TypeError: Cannot read property 'connected' of undefined\r\n\r\n\t\tdelete this.incomingConnections[request.socket]; //request.socket is the socketId, we now have the entire message so we dont need this anymore\r\n\r\n\t\tlet timeout = this._timer.setTimeout(() => {\r\n\t\t\tthis._chromeTCP.getInfo(request.socket, ({connected, peerAddress}) => {\r\n\t\t\t\tif (connected)\r\n\t\t\t\t\tthis._httpResponder.sendTimeoutResponse(request.socket);\r\n\t\t\t});\r\n\t\t}, Constants.serverTimeoutInMilliseconds);\r\n\r\n\t\trequest.path = request.path.toLowerCase();\r\n\r\n\t\tif (this.registeredPaths.hasOwnProperty(request.path)) {\r\n\t\t\tthis.registeredPaths[request.path](request);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.registeredFiles.hasOwnProperty(request.path)) {\r\n\t\t\tthis._fileResponder.sendResponse(request, this.registeredFiles[request.path]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._httpResponder.sendFileNotFoundResponse(request.socket);\r\n\t}\r\n\t_onRequestError(request, err) {\r\n\t\tif(this.incomingConnections.hasOwnProperty(request.socket))\r\n\t\t\tdelete this.incomingConnections[request.socket]; //request.socket is the socketId\r\n\r\n\t\tthis._chromeTCP.getInfo(request.socket, ({connected, peerAddress}) => {\r\n\t\t\tif (connected)\r\n\t\t\t\tthis._httpResponder.sendErrorResponse(request.socket);\r\n\t\t\tconsole.warn('bad request received from ' + peerAddress);\r\n\t\t});\r\n\t}\r\n}\r\nmodule.exports = HttpServer;"]}